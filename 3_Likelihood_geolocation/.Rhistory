samp.r<- rasterize(samp.spdfT, ll.r, field='Sr', fun=mean)
#image(corr.r, add=T, col ='black') #plot the guess
image(samp.r, add=T, col = 'blue') # plot the truth
d[j]<- dist(rbind(corr@coords,samp.spdfT@coords), method = "euclidean")
## for inshore area use
#din[j]<- dist(rbind(corr@coords,mid), method = "euclidean")
dll[j]<- (maxValue(mask(ll.r, corr.r)) - maxValue(mask(ll.r, samp.r)))^2
llScale<- ll.r
## write in a function to trim out all unlikey cells ie leaves all the likely ones from the % area defined previously from precision vs Accuracy
thresh<- unname(quantile(llScale, an.rm=TRUE, probs=1-0.08)) #this threshold value is the one from the ROC curve which maximises accuract and precision
fun1<- function(x) {ifelse(x<thresh, 0, 1)}
lltop<- calc(llScale, fun=fun1) ## apply the function
plot(lltop, col=c('#9ecae1','#3182bd'))
plot(landT, add=T, col='bisque')
answer
if (first.run)
{
llall <- lltop
first.run <- FALSE
} else {
llall <- llall+lltop
}
}
orig118<- llall#/j
plot(orig118, add=T)
plot(landT)
#temp<- c(brewer.pal(9,'Reds')[1],brewer.pal(9,'YlOrRd')[2:9])
#temp
#temp<- colorRampPalette(temp)
##Temp cols
#display.brewer.all()
#area.shades<- brewer.pal(9,'Set1')
#spec<- brewer.pal(11,'Spectral')
#spec<-colorRampPalette(rev(brewer.pal(11,'Spectral')))
#dave.heat<- colorRampPalette(rev(brewer.pal(9,'Blues')[4:9]))
point118<- SpatialPoints(cbind(chem118$long, chem118$lat), CRS(WGS84))
point118T<- spTransform(point118, CRS(mrc))
image(orig118, col = 'white', xaxt='n', yaxt='n',xlim=c(-1057535.2,-278298.7), ylim= c(6800125,8399738), xlab=NA, ylab=NA)
image(orig118, col = temp(1000),  add=T)
plot(landT, add =T, col = 'grey88')
plot(point118T, add=T, pch=19, col='black', cex=2)
summary(chem$region)
chem118<- subset(chem, chem$region =='118')
mid= cbind(x=-722018.2, y=7704320) # mid inshore coords
chem118<- droplevels(chem118)
## log likelihood function
n=mean(table(chem118$Haul_id))
# #Set 1 not -pooled so in the function we change SE from the raster to var to work out rate and shape
ll.norm <- function(parameters, thedata)
{
ll <- (dnorm(thedata, mean=parameters[1], sd=(parameters[2]*sqrt(n)), log=TRUE))
return(ll)
}
#
# ## log likelihood function for gamma distribution elements
ll.gam <- function(parameters, thedata)
{
ll <- (dgamma(thedata, rate=parameters[1]/((parameters[2]^2)*n), shape=(parameters[1]^2)/((parameters[2]^2)*n), log=TRUE))
return(ll)
}
stk<-stack(Na, Na.er, Mg, Mg.er, Ba, Ba.er, Sr, Sr.er,  Mn, Mn.er, Rb, Rb.er) # make a raster stack form the above
param<- as.data.frame(stk, xy=TRUE)# change the above raster back to a dataframe to compute ll
names(param)[3:14]<- c('meanNa', 'sdNa', 'meanMg', 'sdMg', 'meanBa', 'sdBa', 'meanSr', 'sdSr', 'meanMn', 'sdMn',  'meanRb', 'sdRb')
param<- cbind(param, ll=NA) # add the log likelyhood column
head(param)
d=NA #vector to store geographic dists in
din=NA # vector to store geographic dists for inshore in
dll=NA # vector to store vertical distances in
first.run<- TRUE
samps= nrow(chem118)
#samps= 20
for (j in 1:samps)
{
## pull a sample row from data
samp<- chem118[sample(nrow(chem118), 1, replace =FALSE), ]
answer= samp$region # save the answer row for later
# make sample into an sp object and project
coords.tmp<- cbind(samp$long, samp$lat)
## create spdf object
samp.spdf<- SpatialPointsDataFrame(coords.tmp, data = data.frame(samp),
proj4string = CRS(WGS84))
samp.spdfT<- spTransform(samp.spdf, CRS(mrc))
# a loop to estimate liklihood of the data given the parameters and add it to the ll column of param
for(i in 1:nrow(param))
#remove the elements not being used
{
#Na.param <- ll.norm(parameters=c(param$meanNa[i],param$sdNa[i]), thedata=samp$Na)
# Mg.param <- ll.norm(parameters=c(param$meanMg[i],param$sdMg[i]), thedata=samp$Mg)
#Ba.param <- ll.gam(parameters=c(param$meanBa[i],param$sdBa[i]), thedata=samp$Ba)
Sr.param <- ll.norm(parameters=c(param$meanSr[i],param$sdSr[i]), thedata=samp$Sr)
Mn.param <- ll.gam(parameters=c(param$meanMn[i],param$sdMn[i]), thedata=samp$Mn)
#Rb.param <- ll.gam(parameters=c(param$meanRb[i],param$sdRb[i]), thedata=samp$Rb)
param[i,15]<- (#Na.param +
#Mg.param +
# Ba.param+
Sr.param +
Mn.param
#Rb.param
)
}
##turn ll into sp object
coords.tmp<- cbind(param$x, param$y)
## create spdf object
ll.spdf<- SpatialPointsDataFrame(coords.tmp, data = data.frame(param),
proj4string = CRS(mrc))
#then rasterise and the ll sp object
ll.r<- raster(Na)
ll.r<- rasterize(ll.spdf, ll.r, field = 'll', fun = mean)
#plot the likelihood surface
image(ll.r, main=paste('118', j, sep=" "))
points(subset(ll.spdf, ll.spdf$ll==max(ll.spdf$ll,na.rm = TRUE)),cex=6) # add circle for highest point
##save likelyhood surfaces into a folder
#writeRaster(ll.r, file=paste('I:/R_script/Microchemistry/elemental_maps/ass_surf/clLL', j, sep=""), format = 'raster', overwrite=T)
corr<- subset(ll.spdf, ll.spdf$ll==max(ll.spdf$ll,na.rm = TRUE))
corr.r<- rasterize(corr, ll.r, field='meanNa', fun=mean)
samp.r<- rasterize(samp.spdfT, ll.r, field='Sr', fun=mean)
#image(corr.r, add=T, col ='black') #plot the guess
image(samp.r, add=T, col = 'blue') # plot the truth
d[j]<- dist(rbind(corr@coords,samp.spdfT@coords), method = "euclidean")
## for inshore area use
#din[j]<- dist(rbind(corr@coords,mid), method = "euclidean")
dll[j]<- (maxValue(mask(ll.r, corr.r)) - maxValue(mask(ll.r, samp.r)))^2
llScale<- ll.r
## write in a function to trim out all unlikey cells ie leaves all the likely ones from the % area defined previously from precision vs Accuracy
thresh<- unname(quantile(llScale, an.rm=TRUE, probs=1-0.08)) #this threshold value is the one from the ROC curve which maximises accuract and precision
fun1<- function(x) {ifelse(x<thresh, 0, 1)}
lltop<- calc(llScale, fun=fun1) ## apply the function
plot(lltop, col=c('#9ecae1','#3182bd'))
plot(landT, add=T, col='bisque')
answer
if (first.run)
{
llall <- lltop
first.run <- FALSE
} else {
llall <- llall+lltop
}
}
j=2
stk<-stack(Na, Na.er, Mg, Mg.er, Ba, Ba.er, Sr, Sr.er,  Mn, Mn.er, Rb, Rb.er) # make a raster stack form the above
param<- as.data.frame(stk, xy=TRUE)# change the above raster back to a dataframe to compute ll
names(param)[3:14]<- c('meanNa', 'sdNa', 'meanMg', 'sdMg', 'meanBa', 'sdBa', 'meanSr', 'sdSr', 'meanMn', 'sdMn',  'meanRb', 'sdRb')
param<- cbind(param, ll=NA) # add the log likelyhood column
head(param)
d=NA #vector to store geographic dists in
din=NA # vector to store geographic dists for inshore in
dll=NA # vector to store vertical distances in
first.run<- TRUE
samps= nrow(chem118)
i=506
## pull a sample row from data
samp<- chem118[sample(nrow(chem118), 1, replace =FALSE), ]
samp
answer
# make sample into an sp object and project
coords.tmp<- cbind(samp$long, samp$lat)
coords.tmp
## create spdf object
samp.spdf<- SpatialPointsDataFrame(coords.tmp, data = data.frame(samp),
proj4string = CRS(WGS84))
samp.spdfT<- spTransform(samp.spdf, CRS(mrc))
samp.spdfT
#Na.param <- ll.norm(parameters=c(param$meanNa[i],param$sdNa[i]), thedata=samp$Na)
# Mg.param <- ll.norm(parameters=c(param$meanMg[i],param$sdMg[i]), thedata=samp$Mg)
#Ba.param <- ll.gam(parameters=c(param$meanBa[i],param$sdBa[i]), thedata=samp$Ba)
Sr.param <- ll.norm(parameters=c(param$meanSr[i],param$sdSr[i]), thedata=samp$Sr)
Mn.param <- ll.gam(parameters=c(param$meanMn[i],param$sdMn[i]), thedata=samp$Mn)
Sr.param
Mn.param
param[i,15]<- (#Na.param +
#Mg.param +
# Ba.param+
Sr.param +
Mn.param
#Rb.param
)
param[i,15]
##turn ll into sp object
coords.tmp<- cbind(param$x, param$y)
## create spdf object
ll.spdf<- SpatialPointsDataFrame(coords.tmp, data = data.frame(param),
proj4string = CRS(mrc))
ll.spdf
#then rasterise and the ll sp object
ll.r<- raster(Na)
ll.r<- rasterize(ll.spdf, ll.r, field = 'll', fun = mean)
ll.r
#plot the likelihood surface
image(ll.r, main=paste('118', j, sep=" "))
points(subset(ll.spdf, ll.spdf$ll==max(ll.spdf$ll,na.rm = TRUE)),cex=6) # add circle for highest point
corr<- subset(ll.spdf, ll.spdf$ll==max(ll.spdf$ll,na.rm = TRUE))
corr.r<- rasterize(corr, ll.r, field='meanNa', fun=mean)
samp.r<- rasterize(samp.spdfT, ll.r, field='Sr', fun=mean)
#image(corr.r, add=T, col ='black') #plot the guess
image(samp.r, add=T, col = 'blue') # plot the truth
d[j]<- dist(rbind(corr@coords,samp.spdfT@coords), method = "euclidean")
## for inshore area use
#din[j]<- dist(rbind(corr@coords,mid), method = "euclidean")
dll[j]<- (maxValue(mask(ll.r, corr.r)) - maxValue(mask(ll.r, samp.r)))^2
llScale<- ll.r
thresh<- unname(quantile(llScale, an.rm=TRUE, probs=1-0.08)) #this threshold value is the one from the ROC curve which maximises accuract and precision
fun1<- function(x) {ifelse(x<thresh, 0, 1)}
lltop<- calc(llScale, fun=fun1) ## apply the function
plot(lltop, col=c('#9ecae1','#3182bd'))
answer
if (first.run)
{
llall <- lltop
first.run <- FALSE
} else {
llall <- llall+lltop
}
{
## pull a sample row from data
samp<- chem118[sample(nrow(chem118), 1, replace =FALSE), ]
answer= samp$region # save the answer row for later
# make sample into an sp object and project
coords.tmp<- cbind(samp$long, samp$lat)
## create spdf object
samp.spdf<- SpatialPointsDataFrame(coords.tmp, data = data.frame(samp),
proj4string = CRS(WGS84))
samp.spdfT<- spTransform(samp.spdf, CRS(mrc))
# a loop to estimate liklihood of the data given the parameters and add it to the ll column of param
for(i in 1:nrow(param))
#remove the elements not being used
{
#Na.param <- ll.norm(parameters=c(param$meanNa[i],param$sdNa[i]), thedata=samp$Na)
# Mg.param <- ll.norm(parameters=c(param$meanMg[i],param$sdMg[i]), thedata=samp$Mg)
#Ba.param <- ll.gam(parameters=c(param$meanBa[i],param$sdBa[i]), thedata=samp$Ba)
Sr.param <- ll.norm(parameters=c(param$meanSr[i],param$sdSr[i]), thedata=samp$Sr)
Mn.param <- ll.gam(parameters=c(param$meanMn[i],param$sdMn[i]), thedata=samp$Mn)
#Rb.param <- ll.gam(parameters=c(param$meanRb[i],param$sdRb[i]), thedata=samp$Rb)
param[i,15]<- (#Na.param +
#Mg.param +
# Ba.param+
Sr.param +
Mn.param
#Rb.param
)
}
##turn ll into sp object
coords.tmp<- cbind(param$x, param$y)
## create spdf object
ll.spdf<- SpatialPointsDataFrame(coords.tmp, data = data.frame(param),
proj4string = CRS(mrc))
#then rasterise and the ll sp object
ll.r<- raster(Na)
ll.r<- rasterize(ll.spdf, ll.r, field = 'll', fun = mean)
#plot the likelihood surface
image(ll.r, main=paste('118', j, sep=" "))
points(subset(ll.spdf, ll.spdf$ll==max(ll.spdf$ll,na.rm = TRUE)),cex=6) # add circle for highest point
##save likelyhood surfaces into a folder
#writeRaster(ll.r, file=paste('I:/R_script/Microchemistry/elemental_maps/ass_surf/clLL', j, sep=""), format = 'raster', overwrite=T)
corr<- subset(ll.spdf, ll.spdf$ll==max(ll.spdf$ll,na.rm = TRUE))
corr.r<- rasterize(corr, ll.r, field='meanNa', fun=mean)
samp.r<- rasterize(samp.spdfT, ll.r, field='Sr', fun=mean)
#image(corr.r, add=T, col ='black') #plot the guess
image(samp.r, add=T, col = 'blue') # plot the truth
d[j]<- dist(rbind(corr@coords,samp.spdfT@coords), method = "euclidean")
## for inshore area use
#din[j]<- dist(rbind(corr@coords,mid), method = "euclidean")
dll[j]<- (maxValue(mask(ll.r, corr.r)) - maxValue(mask(ll.r, samp.r)))^2
llScale<- ll.r
## write in a function to trim out all unlikey cells ie leaves all the likely ones from the % area defined previously from precision vs Accuracy
thresh<- unname(quantile(llScale, an.rm=TRUE, probs=1-0.08)) #this threshold value is the one from the ROC curve which maximises accuract and precision
fun1<- function(x) {ifelse(x<thresh, 0, 1)}
lltop<- calc(llScale, fun=fun1) ## apply the function
plot(lltop, col=c('#9ecae1','#3182bd'))
#plot(landT, add=T, col='bisque')
answer
if (first.run)
{
llall <- lltop
first.run <- FALSE
} else {
llall <- llall+lltop
}
}
orig118<- llall#/j
summary(chem$region)
chem118<- subset(chem, chem$region =='118')
mid= cbind(x=-722018.2, y=7704320) # mid inshore coords
chem118<- droplevels(chem118)
## log likelihood function
n=mean(table(chem118$Haul_id))
# #Set 1 not -pooled so in the function we change SE from the raster to var to work out rate and shape
ll.norm <- function(parameters, thedata)
{
ll <- (dnorm(thedata, mean=parameters[1], sd=(parameters[2]*sqrt(n)), log=TRUE))
return(ll)
}
#
# ## log likelihood function for gamma distribution elements
ll.gam <- function(parameters, thedata)
{
ll <- (dgamma(thedata, rate=parameters[1]/((parameters[2]^2)*n), shape=(parameters[1]^2)/((parameters[2]^2)*n), log=TRUE))
return(ll)
}
stk<-stack(Na, Na.er, Mg, Mg.er, Ba, Ba.er, Sr, Sr.er,  Mn, Mn.er, Rb, Rb.er) # make a raster stack form the above
param<- as.data.frame(stk, xy=TRUE)# change the above raster back to a dataframe to compute ll
names(param)[3:14]<- c('meanNa', 'sdNa', 'meanMg', 'sdMg', 'meanBa', 'sdBa', 'meanSr', 'sdSr', 'meanMn', 'sdMn',  'meanRb', 'sdRb')
param<- cbind(param, ll=NA) # add the log likelyhood column
head(param)
d=NA #vector to store geographic dists in
din=NA # vector to store geographic dists for inshore in
dll=NA # vector to store vertical distances in
first.run<- TRUE
samps= nrow(chem118)
#samps= 20
for (j in 1:samps)
{
## pull a sample row from data
samp<- chem118[sample(nrow(chem118), 1, replace =FALSE), ]
answer= samp$region # save the answer row for later
# make sample into an sp object and project
coords.tmp<- cbind(samp$long, samp$lat)
## create spdf object
samp.spdf<- SpatialPointsDataFrame(coords.tmp, data = data.frame(samp),
proj4string = CRS(WGS84))
samp.spdfT<- spTransform(samp.spdf, CRS(mrc))
# a loop to estimate liklihood of the data given the parameters and add it to the ll column of param
for(i in 1:nrow(param))
#remove the elements not being used
{
#Na.param <- ll.norm(parameters=c(param$meanNa[i],param$sdNa[i]), thedata=samp$Na)
# Mg.param <- ll.norm(parameters=c(param$meanMg[i],param$sdMg[i]), thedata=samp$Mg)
#Ba.param <- ll.gam(parameters=c(param$meanBa[i],param$sdBa[i]), thedata=samp$Ba)
Sr.param <- ll.norm(parameters=c(param$meanSr[i],param$sdSr[i]), thedata=samp$Sr)
Mn.param <- ll.gam(parameters=c(param$meanMn[i],param$sdMn[i]), thedata=samp$Mn)
#Rb.param <- ll.gam(parameters=c(param$meanRb[i],param$sdRb[i]), thedata=samp$Rb)
param[i,15]<- (#Na.param +
#Mg.param +
# Ba.param+
Sr.param +
Mn.param
#Rb.param
)
}
##turn ll into sp object
coords.tmp<- cbind(param$x, param$y)
## create spdf object
ll.spdf<- SpatialPointsDataFrame(coords.tmp, data = data.frame(param),
proj4string = CRS(mrc))
#then rasterise and the ll sp object
ll.r<- raster(Na)
ll.r<- rasterize(ll.spdf, ll.r, field = 'll', fun = mean)
#plot the likelihood surface
image(ll.r, main=paste('118', j, sep=" "))
points(subset(ll.spdf, ll.spdf$ll==max(ll.spdf$ll,na.rm = TRUE)),cex=6) # add circle for highest point
##save likelyhood surfaces into a folder
#writeRaster(ll.r, file=paste('I:/R_script/Microchemistry/elemental_maps/ass_surf/clLL', j, sep=""), format = 'raster', overwrite=T)
corr<- subset(ll.spdf, ll.spdf$ll==max(ll.spdf$ll,na.rm = TRUE))
corr.r<- rasterize(corr, ll.r, field='meanNa', fun=mean)
samp.r<- rasterize(samp.spdfT, ll.r, field='Sr', fun=mean)
#image(corr.r, add=T, col ='black') #plot the guess
image(samp.r, add=T, col = 'blue') # plot the truth
d[j]<- dist(rbind(corr@coords,samp.spdfT@coords), method = "euclidean")
## for inshore area use
#din[j]<- dist(rbind(corr@coords,mid), method = "euclidean")
dll[j]<- (maxValue(mask(ll.r, corr.r)) - maxValue(mask(ll.r, samp.r)))^2
llScale<- ll.r
## write in a function to trim out all unlikey cells ie leaves all the likely ones from the % area defined previously from precision vs Accuracy
thresh<- unname(quantile(llScale, an.rm=TRUE, probs=1-0.08)) #this threshold value is the one from the ROC curve which maximises accuract and precision
fun1<- function(x) {ifelse(x<thresh, 0, 1)}
lltop<- calc(llScale, fun=fun1) ## apply the function
plot(lltop, col=c('#9ecae1','#3182bd'))
#plot(landT, add=T, col='bisque')
answer
if (first.run)
{
llall <- lltop
first.run <- FALSE
} else {
llall <- llall+lltop
}
}
warnings()
summary(chem$region)
chem121<- subset(chem, chem$region =='121')
chem121<- droplevels(chem121)
nrow(chem121)
## log likelihood function
n=mean(table(chem121$Haul_id))
# #Set 1 not -pooled so in the function we change SE from the raster to var to work out rate and shape
ll.norm <- function(parameters, thedata)
{
ll <- (dnorm(thedata, mean=parameters[1], sd=(parameters[2]*sqrt(n)), log=TRUE))
return(ll)
}
#
# ## log likelihood function for gamma distribution elements
ll.gam <- function(parameters, thedata)
{
ll <- (dgamma(thedata, rate=parameters[1]/((parameters[2]^2)*n), shape=(parameters[1]^2)/((parameters[2]^2)*n), log=TRUE))
return(ll)
}
#  Na<-Na
#  Na.er<-Na.er
#
#  Mg<-Mg
# Mg.er<-Mg.er
#
#  P.big<-P
#  Per.big<- P.er
#
#  Ba<-Ba
# Ba.er<-Ba.er
#
# Sr<-Sr
#  Sr.er<-Sr.er
#
#  Mn<-Mn
#  Mn.er<-Mn.er
#
#  Zn.big<-Zn
#  Zner.big<-Zn.er
#
#  Rb<-Rb
#  Rb.er<-Rb.er
#
#  Li.big<-Rb
#  Lier.big<-Li.er
stk<-stack(Na, Na.er, Mg, Mg.er, Ba, Ba.er, Sr, Sr.er,  Mn, Mn.er, Rb, Rb.er) # make a raster stack form the above
param<- as.data.frame(stk, xy=TRUE)# change the above raster back to a dataframe to compute ll
names(param)[3:14]<- c('meanNa', 'sdNa', 'meanMg', 'sdMg', 'meanBa', 'sdBa', 'meanSr', 'sdSr', 'meanMn', 'sdMn',  'meanRb', 'sdRb')
param<- cbind(param, ll=NA) # add the log likelyhood column
head(param)
d=NA #vector to store geographic dists in
din=NA # vector to store geographic dists for inshore in
dll=NA # vector to store vertical distances in
first.run<- TRUE
samps= nrow(chem121) # ~20
for (j in 1:samps)
{
## pull a sample row from data
samp<- chem121[sample(nrow(chem121), 1, replace =FALSE), ]
answer= samp$region # save the answer row for later
# make sample into an sp object and project
coords.tmp<- cbind(samp$long, samp$lat)
## create spdf object
samp.spdf<- SpatialPointsDataFrame(coords.tmp, data = data.frame(samp),
proj4string = CRS(WGS84))
samp.spdfT<- spTransform(samp.spdf, CRS(mrc))
# a loop to estimate liklihood of the data given the parameters and add it to the ll column of param
for(i in 1:nrow(param))
#remove the elements not being used
{
#Na.param <- ll.norm(parameters=c(param$meanNa[i],param$sdNa[i]), thedata=samp$Na)
# Mg.param <- ll.norm(parameters=c(param$meanMg[i],param$sdMg[i]), thedata=samp$Mg)
#Ba.param <- ll.gam(parameters=c(param$meanBa[i],param$sdBa[i]), thedata=samp$Ba)
Sr.param <- ll.norm(parameters=c(param$meanSr[i],param$sdSr[i]), thedata=samp$Sr)
Mn.param <- ll.gam(parameters=c(param$meanMn[i],param$sdMn[i]), thedata=samp$Mn)
#Rb.param <- ll.gam(parameters=c(param$meanRb[i],param$sdRb[i]), thedata=samp$Rb)
param[i,15]<- (#Na.param +
#Mg.param +
# Ba.param+
Sr.param +
Mn.param
#Rb.param
)
}
##turn ll into sp object
coords.tmp<- cbind(param$x, param$y)
## create spdf object
ll.spdf<- SpatialPointsDataFrame(coords.tmp, data = data.frame(param),
proj4string = CRS(mrc))
#then rasterise and the ll sp object
ll.r<- raster(Na)
ll.r<- rasterize(ll.spdf, ll.r, field = 'll', fun = mean)
#plot the likelihood surface
image(ll.r, main=paste('121', j, sep=" "))
points(subset(ll.spdf, ll.spdf$ll==max(ll.spdf$ll,na.rm = TRUE)),cex=6) # add circle for highest point
##save likelyhood surfaces into a folder
#writeRaster(ll.r, file=paste('I:/R_script/Microchemistry/elemental_maps/ass_surf/clLL', j, sep=""), format = 'raster', overwrite=T)
corr<- subset(ll.spdf, ll.spdf$ll==max(ll.spdf$ll,na.rm = TRUE))
corr.r<- rasterize(corr, ll.r, field='meanNa', fun=mean)
samp.r<- rasterize(samp.spdfT, ll.r, field='Sr', fun=mean)
#image(corr.r, add=T, col ='black') #plot the guess
image(samp.r, add=T, col = 'blue') # plot the truth
d[j]<- dist(rbind(corr@coords,samp.spdfT@coords), method = "euclidean")
## for inshore area use
#din[j]<- dist(rbind(corr@coords,mid), method = "euclidean")
dll[j]<- (maxValue(mask(ll.r, corr.r)) - maxValue(mask(ll.r, samp.r)))^2
llScale<- ll.r
## write in a function to trim out all unlikey cells ie leaves all the likely ones from the % area defined previously from precision vs Accuracy
#thresh
thresh<- unname(quantile(llScale, an.rm=TRUE, probs=1-0.08)) #this threshold value is the one from the ROC curve which maximises accuract and precision
fun1<- function(x) {ifelse(x<thresh, 0, 1)}
lltop<- calc(llScale, fun=fun1) ## apply the function
plot(lltop, col=c('#9ecae1','#3182bd'))
#plot(landT, add=T, col='bisque')
answer
if (first.run)
{
llall <- lltop
first.run <- FALSE
} else {
llall <- llall+lltop
}
}
orig121<- llall#/j
plot(orig121, add=T)
#plot(landT)
blues<- colorRampPalette(brewer.pal(9,'Blues'), alpha=T)
greens<- colorRampPalette(brewer.pal(9,'Greens'), alpha=T)
reds<- colorRampPalette(brewer.pal(9,'Reds'), alpha=T)
point121<- SpatialPoints(cbind(chem121$long, chem121$lat), CRS(WGS84))
point121T<- spTransform(point121, CRS(mrc))
image(orig121, col = 'white', xaxt='n', yaxt='n',xlim=c(-1057535.2,-278298.7), ylim= c(6800125,8399738), xlab=NA, ylab=NA)
image(orig121, col = temp(1000), zlim= c(0,nrow(chem121)), add=T)
#plot(landT, add =T, col = 'grey88')
plot(point121T, add=T, pch=19, col='black', cex=2)
